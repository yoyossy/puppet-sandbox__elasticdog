/*
  Clean up script used from 3.x to 3.5 migration.

  Basically drop rows that doesn't satisfy the new integrity constraints
 */

SELECT * FROM BODYCONTENT LEFT JOIN CONTENT
  on (BODYCONTENT.CONTENTID = CONTENT.CONTENTID)
  WHERE BODYCONTENT.CONTENTID is not null AND CONTENT.CONTENTID is null;

DELETE FROM BODYCONTENT USING BODYCONTENT LEFT JOIN CONTENT
  on (BODYCONTENT.CONTENTID = CONTENT.CONTENTID)
  WHERE BODYCONTENT.CONTENTID is not null AND CONTENT.CONTENTID is null;


SELECT * FROM CONFANCESTORS LEFT JOIN CONTENT
  on (CONFANCESTORS.DESCENDENTID = CONTENT.CONTENTID)
  WHERE CONFANCESTORS.DESCENDENTID is not null AND CONTENT.CONTENTID is null;

DELETE FROM CONFANCESTORS USING CONFANCESTORS LEFT JOIN CONTENT
  on (CONFANCESTORS.DESCENDENTID = CONTENT.CONTENTID)
  WHERE CONFANCESTORS.DESCENDENTID is not null AND CONTENT.CONTENTID is null;


SELECT * FROM CONTENT_LABEL LEFT JOIN CONTENT
  on (CONTENT_LABEL.CONTENTID = CONTENT.CONTENTID)
  WHERE CONTENT_LABEL.CONTENTID is not null AND CONTENT.CONTENTID is null;

DELETE FROM CONTENT_LABEL USING CONTENT_LABEL LEFT JOIN CONTENT
  on (CONTENT_LABEL.CONTENTID = CONTENT.CONTENTID)
  WHERE CONTENT_LABEL.CONTENTID is not null AND CONTENT.CONTENTID is null;


SELECT * FROM LINKS LEFT JOIN CONTENT
  on (LINKS.CONTENTID = CONTENT.CONTENTID)
  WHERE LINKS.CONTENTID is not null AND CONTENT.CONTENTID is null;

DELETE FROM LINKS USING LINKS LEFT JOIN CONTENT
  on (LINKS.CONTENTID = CONTENT.CONTENTID)
  WHERE LINKS.CONTENTID is not null AND CONTENT.CONTENTID is null;

/* removing duplicate entries */
DELETE FROM CONTENT_PERM WHERE ID=46596101 OR ID=46596099 OR ID=46596097;
/* check duplicates */
SELECT CPS_ID,CP_TYPE,USERNAME,COUNT(*) FROM CONTENT_PERM GROUP BY CPS_ID,CP_TYPE,USERNAME HAVING COUNT(*) > 1;

